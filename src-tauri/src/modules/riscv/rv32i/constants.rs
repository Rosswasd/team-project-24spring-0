use std::str::FromStr;

#[derive(Clone, Copy, Debug, PartialEq, Eq)]
pub enum RISCVRegister {
    Zero,
    Ra,
    Sp,
    Gp,
    Tp,
    T0,
    T1,
    T2,
    S0,
    S1,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    A6,
    A7,
    S2,
    S3,
    S4,
    S5,
    S6,
    S7,
    S8,
    S9,
    S10,
    S11,
    T3,
    T4,
    T5,
    T6,
}

#[derive(Clone, Copy, Debug, PartialEq, Eq)]
pub enum RISCVInstruction {
    Lui,
    Auipc,
    Jal,
    Jalr,
    Beq,
    Bne,
    Blt,
    Bge,
    Bltu,
    Bgeu,
    Lb,
    Lh,
    Lw,
    Lbu,
    Lhu,
    Sb,
    Sh,
    Sw,
    Addi,
    Slti,
    Sltiu,
    Xori,
    Ori,
    Andi,
    Slli,
    Srli,
    Srai,
    Add,
    Sub,
    Sll,
    Slt,
    Sltu,
    Xor,
    Srl,
    Sra,
    Or,
    And,
}

#[derive(Clone, Copy, Debug, PartialEq)]
pub enum RISCVImmediate {
    Int(i128),
    Float(f64),
}

pub struct ParseRISCVRegisterError;

impl FromStr for RISCVRegister {
    type Err = ParseRISCVRegisterError;

    fn from_str(s: &str) -> Result<Self, Self::Err> {
        match s {
            "zero" | "x0" => Ok(RISCVRegister::Zero),
            "ra" | "x1" => Ok(RISCVRegister::Ra),
            "sp" | "x2" => Ok(RISCVRegister::Sp),
            "gp" | "x3" => Ok(RISCVRegister::Gp),
            "tp" | "x4" => Ok(RISCVRegister::Tp),
            "t0" | "x5" => Ok(RISCVRegister::T0),
            "t1" | "x6" => Ok(RISCVRegister::T1),
            "t2" | "x7" => Ok(RISCVRegister::T2),
            "s0" | "x8" => Ok(RISCVRegister::S0),
            "s1" | "x9" => Ok(RISCVRegister::S1),
            "a0" | "x10" => Ok(RISCVRegister::A0),
            "a1" | "x11" => Ok(RISCVRegister::A1),
            "a2" | "x12" => Ok(RISCVRegister::A2),
            "a3" | "x13" => Ok(RISCVRegister::A3),
            "a4" | "x14" => Ok(RISCVRegister::A4),
            "a5" | "x15" => Ok(RISCVRegister::A5),
            "a6" | "x16" => Ok(RISCVRegister::A6),
            "a7" | "x17" => Ok(RISCVRegister::A7),
            "s2" | "x18" => Ok(RISCVRegister::S2),
            "s3" | "x19" => Ok(RISCVRegister::S3),
            "s4" | "x20" => Ok(RISCVRegister::S4),
            "s5" | "x21" => Ok(RISCVRegister::S5),
            "s6" | "x22" => Ok(RISCVRegister::S6),
            "s7" | "x23" => Ok(RISCVRegister::S7),
            "s8" | "x24" => Ok(RISCVRegister::S8),
            "s9" | "x25" => Ok(RISCVRegister::S9),
            "s10" | "x26" => Ok(RISCVRegister::S10),
            "s11" | "x27" => Ok(RISCVRegister::S11),
            "t3" | "x28" => Ok(RISCVRegister::T3),
            "t4" | "x29" => Ok(RISCVRegister::T4),
            "t5" | "x30" => Ok(RISCVRegister::T5),
            "t6" | "x31" => Ok(RISCVRegister::T6),
            _ => Err(ParseRISCVRegisterError),
        }
    }
}
